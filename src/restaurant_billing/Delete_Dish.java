/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurant_billing;

import java.sql.*;
import javax.swing.*;

/**
 *
 * @author ram arora
 */
public class Delete_Dish extends javax.swing.JInternalFrame implements globalvariables {

    /**
     * Creates new form Delete_Dish
     */
    public Delete_Dish() {
        initComponents();
        Connection myconnection;
            try
            {
            myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
            String a="select * from mealtable";
            PreparedStatement mystatement=myconnection.prepareStatement(a); 
            ResultSet myresult=mystatement.executeQuery();
            if(myresult.next())
            {
            do
            {
            mealbox.addItem(myresult.getString("meal"));
            }
            while(myresult.next());
            }
            else
            {
            JOptionPane.showMessageDialog(rootPane, "No Meals Added yet");
            }
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
            myconnection.close();
            }

            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mealtypebox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        mealbox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        dishbox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        mealtypebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Mealtype" }));
        mealtypebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealtypeboxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Meal Type:");

        mealbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Meal" }));
        mealbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealboxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Meal :");

        dishbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Dish" }));
        dishbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishboxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Dish:");

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mealbox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mealtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(dishbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mealtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mealbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dishbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mealboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealboxActionPerformed
        {
            Connection myconnection2;
            try
            {
                myconnection2=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                try
                {
                    String a2="select * from mealtypetable";

                    PreparedStatement mystatement2=myconnection2.prepareStatement(a2);

                    ResultSet myresult2=mystatement2.executeQuery();
                    if(myresult2.next())
                    {
                        mealtypebox.removeAllItems();
                        mealtypebox.addItem("Choose Mealtype");
                        do
                        {
                            mealtypebox.addItem(myresult2.getString("mealtype"));
                        }
                        while(myresult2.next());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Mealtypes Added yet");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                }
                finally
                {
                    myconnection2.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }
    }//GEN-LAST:event_mealboxActionPerformed

    private void mealtypeboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealtypeboxActionPerformed
        if(mealbox.getSelectedIndex()>0&&mealtypebox.getSelectedIndex()>0)
        {
            try
            {
                Connection myconnection;

                myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                try
                {
                    String a="select * from dishtable where meal=? and mealtype=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    mystatement.setString(1, mealbox.getSelectedItem().toString());
                    mystatement.setString(2, mealtypebox.getSelectedItem().toString());
                    ResultSet myresult=mystatement.executeQuery();

                    if(myresult.next())
                    {
                        dishbox.removeAllItems();
                        dishbox.addItem("Choose Dish");
                        do
                        {
                            dishbox.addItem(myresult.getString("dish"));
                        }
                        while(myresult.next());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Add Dishes first");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }

        }
    }//GEN-LAST:event_mealtypeboxActionPerformed

    private void dishboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishboxActionPerformed

    }//GEN-LAST:event_dishboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

try
{
Connection myconn = DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String q="delete from dishtable where meal=?,mealtype=?,dish=?";
PreparedStatement myst = myconn.prepareStatement(q);
myst.setString(1, mealbox.getSelectedItem().toString());
myst.setString(2,  mealtypebox.getSelectedItem().toString());
myst.setString(3,  dishbox.getSelectedItem().toString());
int res = myst.executeUpdate();

if(res>0)
{
JOptionPane.showMessageDialog(rootPane, "Dish Deleted Successfully");

}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, e.getMessage());
}
finally
{
myconn.close();
}
}
catch(SQLException se)
{
JOptionPane.showMessageDialog(rootPane, "Error in connection" + se.getMessage());
}

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dishbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<String> mealbox;
    private javax.swing.JComboBox<String> mealtypebox;
    // End of variables declaration//GEN-END:variables
}
