package restaurant_billing;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static restaurant_billing.globalvariables.PASSWORD;
import static restaurant_billing.globalvariables.PATH;
import static restaurant_billing.globalvariables.PLACE;
import static restaurant_billing.globalvariables.USERNAME;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ram arora
 */
public class Order extends javax.swing.JInternalFrame {

    /**
     * Creates new form Order
     */
    public Order() {
        initComponents();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        datebox.setText(dateFormat.format(date));
        {
         Connection myconnection;
            try
            {
            myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
            String a="select * from mealtable";
            PreparedStatement mystatement=myconnection.prepareStatement(a); 
            ResultSet myresult=mystatement.executeQuery();
            if(myresult.next())
            {
            do
            {
            mealbox.addItem(myresult.getString("meal"));
            }
            while(myresult.next());
            }
            else
            {
            JOptionPane.showMessageDialog(rootPane, "No Meals Added yet");
            }
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
            myconnection.close();
            }

            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }
            Connection myconnection2;
            try
            {
            myconnection2=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
            String a="select * from bookingtable";
            PreparedStatement mystatement2=myconnection2.prepareStatement(a); 
            ResultSet myresult2=mystatement2.executeQuery();
            if(myresult2.next())
            {   
            do
            {
            String cname=myresult2.getString("name")+"@"+myresult2.getString("tablenumber");
            customerbox.addItem(cname);
            }
            while(myresult2.next());
            }
            
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
            myconnection2.close();
            }

            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        totalbox = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        customerbox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        datebox = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        quantitybox = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mealbox = new javax.swing.JComboBox<>();
        mealtypebox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dishbox = new javax.swing.JComboBox<>();
        jSplitPane1 = new javax.swing.JSplitPane();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        taxbox = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        netbox = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Bill Number :");

        jLabel2.setText("     ");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mealtype", "Dish", "Price per plate", "Quantity", "Total Cost"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Order For:");

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        customerbox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        customerbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Customer" }));
        customerbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerboxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Booking Id :");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("0");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("0");

        datebox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        datebox.setText("0");

        quantitybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityboxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Quantity:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Meal :");

        mealbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Meal" }));
        mealbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealboxActionPerformed(evt);
            }
        });

        mealtypebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Mealtype" }));
        mealtypebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealtypeboxActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Meal Type:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Dish:");

        dishbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Dish" }));
        dishbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dishboxActionPerformed(evt);
            }
        });

        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jSplitPane1.setRightComponent(jButton3);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jSplitPane1.setLeftComponent(jButton1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mealbox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mealtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dishbox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(quantitybox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mealbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mealtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dishbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantitybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 0, 204));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.gif"))); // NOI18N
        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Total:");

        taxbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxboxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("GST @18%");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("GRAND TOTAL:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(982, 982, 982)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(datebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(customerbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(141, 141, 141)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(netbox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalbox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taxbox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(datebox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(customerbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(jLabel13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(taxbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(netbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mealboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealboxActionPerformed
     {    
             Connection myconnection2;
            try
            {
            myconnection2=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
            try
            {
            String a2="select * from mealtypetable";
            
            PreparedStatement mystatement2=myconnection2.prepareStatement(a2); 
            
            ResultSet myresult2=mystatement2.executeQuery();
            if(myresult2.next())
            {
            mealtypebox.removeAllItems();
            mealtypebox.addItem("Choose Mealtype");
            do
            {
            mealtypebox.addItem(myresult2.getString("mealtype"));
            }
            while(myresult2.next());
            }
            else
            {
            JOptionPane.showMessageDialog(rootPane, "No Mealtypes Added yet");
            }
            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
            myconnection2.close();
            }

            }
            catch(Exception e)
            {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
    }
    }//GEN-LAST:event_mealboxActionPerformed

    private void mealtypeboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealtypeboxActionPerformed
     if(mealbox.getSelectedIndex()>0&&mealtypebox.getSelectedIndex()>0)
{
try
{
Connection myconnection;

myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select * from dishtable where meal=? and mealtype=?";
PreparedStatement mystatement=myconnection.prepareStatement(a);
mystatement.setString(1, mealbox.getSelectedItem().toString());
mystatement.setString(2, mealtypebox.getSelectedItem().toString());
ResultSet myresult=mystatement.executeQuery();

if(myresult.next())
{
dishbox.removeAllItems();
dishbox.addItem("Choose Dish");
do
{
dishbox.addItem(myresult.getString("dish"));
}
while(myresult.next());
}
else
{
JOptionPane.showMessageDialog(rootPane, "Add Dishes first");
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
}
finally
{
myconnection.close();
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}




}
    }//GEN-LAST:event_mealtypeboxActionPerformed

    private void dishboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dishboxActionPerformed
   
    }//GEN-LAST:event_dishboxActionPerformed

    private void quantityboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              Connection myconnection=null;
try
{
    myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
if(mealbox.getSelectedItem()!=null&&mealtypebox.getSelectedItem()!=null&&dishbox.getSelectedIndex()>0 )
{
try
{

String query="select * from dishtable where meal=? and mealtype=? and dish=?";
PreparedStatement mystatement=myconnection.prepareStatement(query);
mystatement.setString(1,mealbox.getSelectedItem().toString());
mystatement.setString(2,mealtypebox.getSelectedItem().toString());
mystatement.setString(3,dishbox.getSelectedItem().toString());
ResultSet myresult=mystatement.executeQuery();

DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();

String meal,mealtype,dish,price,qty;

if(myresult.next())
{

mealtype=myresult.getString("mealtype");
dish=myresult.getString("dish");
price=myresult.getString("price");
qty=quantitybox.getText();
int totalcost=Integer.parseInt(price)*Integer.parseInt(qty);
mymodel.addRow(new Object[]{mealtype,dish,price,qty,totalcost});
}
int r=jTable1.getRowCount();
double net=0,gst=0,finalcost=0;
for(int i=0;i<r;i++)
{
    net=net+Integer.parseInt(jTable1.getValueAt(i, 4).toString());
    gst=(18*net)/100;
    finalcost=net+gst;
}
totalbox.setText(String.valueOf(net));
taxbox.setText(String.valueOf(gst));
netbox.setText(String.valueOf(finalcost));
}

catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query "+e.getMessage());
}
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection "+e.getMessage());
}
finally
{
try
{
myconnection.close();

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Unable to close connection "+e.getMessage());
}
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Connection myconnection=null;
try
{
myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
String dish= "", price = "",quantity="",mealtype="",totalcost="";
try
{

String query="insert into ordertable values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
PreparedStatement mystatement=myconnection.prepareStatement(query);
mystatement.setString(1,jLabel10.getText());
mystatement.setString(2,customerbox.getSelectedItem().toString().substring(0,customerbox.getSelectedItem().toString().indexOf("@")));
mystatement.setString(3,customerbox.getSelectedItem().toString().substring(customerbox.getSelectedItem().toString().indexOf("@")+1));
mystatement.setString(4,jLabel11.getText());
mystatement.setString(5,mealbox.getSelectedItem().toString());


int r=jTable1.getRowCount();
for(int i=0;i<r;i++)
{
mealtype+=jTable1.getValueAt(i,0)+",";
dish += jTable1.getValueAt(i, 1) + ",";
price += jTable1.getValueAt(i, 2) + ",";
quantity+= jTable1.getValueAt(i, 3) + ",";
totalcost+=jTable1.getValueAt(i,4) + ",";
}
mystatement.setString(6,mealtype.substring(0,mealtype.length()-1));
mystatement.setString(7,dish.substring(0,dish.length()-1));
mystatement.setString(8,price.substring(0,price.length()-1));
mystatement.setString(9,quantity.substring(0,quantity.length()-1));
mystatement.setString(10,totalcost.substring(0,totalcost.length()-1));
mystatement.setString(11,totalbox.getText());
mystatement.setString(12,taxbox.getText());
mystatement.setString(13,netbox.getText());
mystatement.setString(14,"NO");
mystatement.setString(15,datebox.getText());
mystatement.execute();

JOptionPane.showMessageDialog(rootPane, "Order Saved");

 
}
catch (Exception ae) 
{
JOptionPane.showMessageDialog(rootPane, "Error in Query" + ae.getMessage());
ae.printStackTrace();
}
finally
{
    myconnection.close();
}
}

catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection "+e.getMessage());
}



        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
       try
{
Connection myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{ 
        
        
        
        
        
String query2="select max(billnumber) from ordertable";
PreparedStatement mystatement=myconnection.prepareStatement(query2);
ResultSet myresult2=mystatement.executeQuery();

if(myresult2.next())
{
int eid=myresult2.getInt(1);
if(eid==0)
{
eid=1000;
}
jLabel11.setText(String.valueOf(eid+1));

} 
else
{
JOptionPane.showMessageDialog(rootPane, "No record found");
}

}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in query "+e.getMessage());
}
finally
{

myconnection.close();
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection "+e.getMessage());
}



    }//GEN-LAST:event_formInternalFrameActivated

    private void customerboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerboxActionPerformed
       try
{
Connection myconnection;

myconnection=DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
try
{
String a="select customerid from bookingtable where name=?";
PreparedStatement mystatement=myconnection.prepareStatement(a);
mystatement.setString(1,customerbox.getSelectedItem().toString().substring(0,customerbox.getSelectedItem().toString().indexOf("@")));
//mystatement.setString(2,customerbox.getSelectedItem().toString().substring(customerbox.getSelectedItem().toString().indexOf("@")+1));
ResultSet myresult=mystatement.executeQuery();

if(myresult.next())
{
    do{
       jLabel10.setText(myresult.getString("customerid")); 
    }while(myresult.next());

}
else
{
JOptionPane.showMessageDialog(rootPane, "Booking Not Found"+" "+customerbox.getSelectedItem().toString().substring(0,customerbox.getSelectedItem().toString().indexOf("@"))+" "+customerbox.getSelectedItem().toString().substring(customerbox.getSelectedItem().toString().indexOf("@")+1));
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
}
finally
{
myconnection.close();
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
}





    }//GEN-LAST:event_customerboxActionPerformed

    private void taxboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taxboxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
mymodel.removeRow(jTable1.getSelectedRow());
this.revalidate();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> customerbox;
    private javax.swing.JLabel datebox;
    private javax.swing.JComboBox<String> dishbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> mealbox;
    private javax.swing.JComboBox<String> mealtypebox;
    private javax.swing.JTextField netbox;
    private javax.swing.JFormattedTextField quantitybox;
    private javax.swing.JTextField taxbox;
    private javax.swing.JTextField totalbox;
    // End of variables declaration//GEN-END:variables
}
